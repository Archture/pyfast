#!/usr/bin/env python

"""
run_fast
========

Performs FAST or eFAST analyses on model data.

For FAST, sensitivities are displayed as a vector.

For eFAST, individual and total sensitivities are displayed as a pair.
"""

from sys import argv
from getopt import getopt
from pyfast import fast, efast_first_order, efast_total_order, DEFAULT_M
from numpy import loadtxt, savetxt, array


def print_usage():
    print("Usage: run_fast [-e INT] [-h] [-o OUTPUT] <model data>"
          " <number of parameters>")
    print("Options:")
    print("-e NUMBER\t\tRun extended fast. NUMBER is the value of the"
          " frequency for this parameter (Default: off)")
    print("-h, --help\t\tUsage instructions")
    print("    --order INT\t\tNumber of Fourier Coefficients (Default: {0})"
          .format(DEFAULT_M))
    print("-o, --output FILE\tOutput file (Default: Standard Output)")

(opts, args) = getopt(argv[1:], "e:ho:", ["help", "order=", "output="])

order = DEFAULT_M
outfilename = None
omega = 0
for (opt, optarg) in opts:
    while opt[0] == '-':
        opt = opt[1:]

    if opt == "e":
        omega = float(optarg)
    elif opt in ["h", "help"]:
        print_usage()
        exit(0)
    elif opt == "order":
        order = int(optarg)
    elif opt in ["o", "output"]:
        outfilename = optarg

if len(args) != 2:
    from sys import stderr
    stderr.write("Requires model data and number of parameters\n")
    stderr.write("For help, run run_fast -h\n")
    exit(1)

infilename = args[0]
num_params = int(args[1])
model = loadtxt(infilename, delimiter=",")

if omega:
    first_order = efast_first_order(model, omega, order)
    total_order = efast_total_order(model, omega, order)
    sensitivities = array([first_order, total_order]).reshape((1,-1))
else:
    sensitivities = fast(model, num_params, order)

if not outfilename:
    print(sensitivities)
else:
    savetxt(outfilename, sensitivities, delimiter=",")
